diff --git a/src/Attack/AttackStrategy.php b/src/Attack/AttackStrategy.php
new file mode 100644
index 0000000..e08d3ed
--- /dev/null
+++ b/src/Attack/AttackStrategy.php
@@ -0,0 +1,8 @@
+<?php
+
+namespace App\Attack;
+
+interface AttackStrategy
+{
+    public function attack(): int;
+}
\ No newline at end of file
diff --git a/src/Attack/BowType.php b/src/Attack/BowType.php
new file mode 100644
index 0000000..3a02463
--- /dev/null
+++ b/src/Attack/BowType.php
@@ -0,0 +1,13 @@
+<?php
+
+namespace App\Attack;
+
+use App\Dice;
+
+class BowType implements AttackStrategy
+{
+    public function attack(): int
+    {
+        return Dice::roll(3, 20);
+    }
+}
diff --git a/src/Attack/EnchantedLongSwordType.php b/src/Attack/EnchantedLongSwordType.php
new file mode 100644
index 0000000..d0a4eb2
--- /dev/null
+++ b/src/Attack/EnchantedLongSwordType.php
@@ -0,0 +1,29 @@
+<?php
+
+namespace App\Attack;
+
+use App\Dice;
+
+class EnchantedLongSwordType implements AttackStrategy
+{
+    private AttackStrategy $longSwordType;
+    private AttackStrategy $fireBoltType;
+
+    public function __construct()
+    {
+        $this->longSwordType = new LongSwordType();
+        $this->fireBoltType = new FireBoltType();
+    }
+
+    /**
+     * 30% chance to cast a fire bolt on attack
+     */
+    public function attack(): int
+    {
+        $damage = $this->longSwordType->attack();
+
+        $damage += Dice::roll(1, 100) > 70 ? $this->fireBoltType->attack() : 0;
+
+        return $damage;
+    }
+}
diff --git a/src/Attack/FireBoltType.php b/src/Attack/FireBoltType.php
new file mode 100644
index 0000000..22a2b6d
--- /dev/null
+++ b/src/Attack/FireBoltType.php
@@ -0,0 +1,16 @@
+<?php
+
+namespace App\Attack;
+
+use App\Dice;
+
+class FireBoltType implements AttackStrategy
+{
+    /**
+     * Fire Bolt damage: 3d6 (3 dices of six sides)
+     */
+    public function attack(): int
+    {
+        return Dice::roll(1, 6) + Dice::roll(1, 6) + Dice::roll(1, 6);
+    }
+}
diff --git a/src/Attack/IceBoltType.php b/src/Attack/IceBoltType.php
new file mode 100644
index 0000000..964f7b5
--- /dev/null
+++ b/src/Attack/IceBoltType.php
@@ -0,0 +1,13 @@
+<?php
+
+namespace App\Attack;
+
+use App\Dice;
+
+class IceBoltType implements AttackStrategy
+{
+    public function attack(): int
+    {
+        return Dice::roll(4, 18);
+    }
+}
diff --git a/src/Attack/LongSwordType.php b/src/Attack/LongSwordType.php
new file mode 100644
index 0000000..a302e3d
--- /dev/null
+++ b/src/Attack/LongSwordType.php
@@ -0,0 +1,16 @@
+<?php
+
+namespace App\Attack;
+
+use App\Dice;
+
+class LongSwordType implements AttackStrategy
+{
+    /**
+     * Long Sword damage: 6-12
+     */
+    public function attack(): int
+    {
+        return Dice::roll(6, 12);
+    }
+}
diff --git a/src/Character/Archer.php b/src/Character/Archer.php
index 9670dea..59cd041 100755
--- a/src/Character/Archer.php
+++ b/src/Character/Archer.php
@@ -2,6 +2,7 @@
 
 namespace App\Character;
 
+use App\Attack\BowType;
 use App\Dice;
 
 class Archer extends Character
@@ -12,15 +13,7 @@ class Archer extends Character
         $this->currentHealth = $this->health;
         $this->baseDamage = 10;
         $this->armor = 0.15;
-    }
 
-    public function attack(Character $target): int
-    {
-        return $this->baseDamage + $this->shoot();
-    }
-
-    private function shoot(): int
-    {
-        return Dice::roll(3, 20);
+        $this->attackType = new BowType();
     }
 }
diff --git a/src/Character/Character.php b/src/Character/Character.php
index 8ffe2b9..1dd0562 100755
--- a/src/Character/Character.php
+++ b/src/Character/Character.php
@@ -2,22 +2,19 @@
 
 namespace App\Character;
 
+use App\Attack\AttackStrategy;
+
 abstract class Character
 {
     protected int $health;
     protected int $baseDamage;
     protected int $currentHealth;
     protected float $armor;
+    protected AttackStrategy $attackType;
 
-
-//    protected WeaponStrategy $weaponType;
-//    protected ArmorStrategy $armorType;
-
-    public function attack(Character $enemy): int
+    public function attack(): int
     {
-        $damage = $this->baseDamage;
-
-        return $enemy->receiveAttack($damage);
+        return $this->attackType->attack();
     }
 
     public function receiveAttack(int $enemyDamage): int
@@ -28,16 +25,6 @@ abstract class Character
         return $receivedDamage;
     }
 
-    protected function calculateDamage(): int
-    {
-        return $this->weaponType->getDamage($this->baseDamage);
-    }
-
-    protected function calculateDamageToReceive(int $enemyDamage): int
-    {
-        return (int)($enemyDamage * (1 - $this->armorReduction));
-    }
-
     public function getCurrentHealth(): int
     {
         return $this->currentHealth;
diff --git a/src/Character/IceMage.php b/src/Character/IceMage.php
index 9fb7c1f..5859a52 100644
--- a/src/Character/IceMage.php
+++ b/src/Character/IceMage.php
@@ -2,6 +2,7 @@
 
 namespace App\Character;
 
+use App\Attack\IceBoltType;
 use App\Dice;
 
 /**
@@ -9,8 +10,10 @@ use App\Dice;
  */
 class IceMage extends Mage
 {
-    public function attack(Character $target): int
+    public function __construct()
     {
-        return Dice::roll(4, 18);
+        parent::__construct();
+
+        $this->attackType = new IceBoltType();
     }
 }
diff --git a/src/Character/Mage.php b/src/Character/Mage.php
index 3916ece..e9bd850 100755
--- a/src/Character/Mage.php
+++ b/src/Character/Mage.php
@@ -2,6 +2,7 @@
 
 namespace App\Character;
 
+use App\Attack\FireBoltType;
 use App\Dice;
 
 class Mage extends Character
@@ -12,6 +13,8 @@ class Mage extends Character
         $this->currentHealth = $this->health;
         $this->baseDamage = 8;
         $this->armor = 0.10;
+
+        $this->attackType = new FireBoltType();
     }
 
     /**
@@ -26,20 +29,6 @@ class Mage extends Character
         return $receivedDamage;
     }
 
-    public function attack(Character $target): int
-    {
-        // Pretend this a more complex game
-        return $this->castFireBolt();
-    }
-
-    /**
-     * Firebolt damage: 3d6 (3 dices of six sides)
-     */
-    private function castFireBolt(): int
-    {
-        return Dice::roll(1, 6) + Dice::roll(1, 6) + Dice::roll(1, 6);
-    }
-
     private function iceBlock(): int
     {
         return Dice::roll(1, 6) + Dice::roll(1, 6);
diff --git a/src/Character/MageFighter.php b/src/Character/MageFighter.php
index 5d89d8f..f6fb451 100644
--- a/src/Character/MageFighter.php
+++ b/src/Character/MageFighter.php
@@ -2,7 +2,7 @@
 
 namespace App\Character;
 
-use App\Dice;
+use App\Attack\EnchantedLongSwordType;
 
 class MageFighter extends Character
 {
@@ -12,6 +12,8 @@ class MageFighter extends Character
         $this->currentHealth = $this->health;
         $this->baseDamage = 8;
         $this->armor = 0.15;
+
+        $this->attackType = new EnchantedLongSwordType();
     }
 
     /**
@@ -26,12 +28,4 @@ class MageFighter extends Character
 
         return $receivedDamage;
     }
-
-    /**
-     * 30% chance of casting a spell on attack
-     */
-    public function attack(Character $target): int
-    {
-        // cannot reuse Fighter or Mage "attack()" method's code
-    }
 }
diff --git a/src/Character/Warrior.php b/src/Character/Warrior.php
index 5c2d333..d753260 100755
--- a/src/Character/Warrior.php
+++ b/src/Character/Warrior.php
@@ -2,6 +2,7 @@
 
 namespace App\Character;
 
+use App\Attack\LongSwordType;
 use App\Dice;
 
 class Warrior extends Character
@@ -12,18 +13,7 @@ class Warrior extends Character
         $this->currentHealth = $this->health;
         $this->baseDamage = 12;
         $this->armor = 0.25;
-    }
 
-    public function attack(Character $target): int
-    {
-        return $this->baseDamage + $this->longSwordAttack();
-    }
-
-    /**
-     * Long Sword damage: 6-12
-     */
-    private function longSwordAttack(): int
-    {
-        return Dice::roll(6, 12);
+        $this->attackType = new LongSwordType();
     }
 }
