diff --git a/src/Command/GameInfoCommand.php b/src/Command/GameInfoCommand.php
index e53f661..ecb3195 100644
--- a/src/Command/GameInfoCommand.php
+++ b/src/Command/GameInfoCommand.php
@@ -2,10 +2,7 @@
 
 namespace App\Command;
 
-use App\AttackType\AttackType;
-use App\AttackType\BowType;
-use App\AttackType\FireBoltType;
-use App\AttackType\TwoHandedSwordType;
+use App\Factory\AttackTypeFactory;
 use Symfony\Component\Console\Attribute\AsCommand;
 use Symfony\Component\Console\Command\Command;
 use Symfony\Component\Console\Input\InputInterface;
@@ -15,6 +12,11 @@ use Symfony\Component\Console\Style\SymfonyStyle;
 #[AsCommand('app:game:info')]
 class GameInfoCommand extends Command
 {
+    public function __construct(private readonly AttackTypeFactory $attackTypeFactory)
+    {
+        parent::__construct();
+    }
+
     protected function execute(InputInterface $input, OutputInterface $output): int
     {
         $io = new SymfonyStyle($input, $output);
@@ -42,7 +44,7 @@ class GameInfoCommand extends Command
 
     private function computeAverageDamage(string $attackTypeString, int $baseDamage = 0): float
     {
-        $attackType = $this->createAttackType($attackTypeString);
+        $attackType = $this->attackTypeFactory->create($attackTypeString);
         $damage = 0;
         $sampleSize = 1000;
         for ($i = 0; $i < $sampleSize; $i++) {
@@ -51,14 +53,4 @@ class GameInfoCommand extends Command
 
         return round($damage / $sampleSize, 1);
     }
-
-    private function createAttackType(string $attackType): AttackType
-    {
-        return match ($attackType) {
-            'bow' => new BowType(),
-            'fire_bolt' => new FireBoltType(),
-            'sword' => new TwoHandedSwordType(),
-            default => throw new \RuntimeException('Invalid attack type given')
-        };
-    }
 }
