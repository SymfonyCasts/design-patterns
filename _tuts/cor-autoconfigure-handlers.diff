diff --git a/src/ChainHandler/CasinoHandler.php b/src/ChainHandler/CasinoHandler.php
index 0cd693a..3ba84cf 100644
--- a/src/ChainHandler/CasinoHandler.php
+++ b/src/ChainHandler/CasinoHandler.php
@@ -6,7 +6,11 @@ use App\Character\Character;
 use App\Dice;
 use App\FightResult;
 use App\GameApplication;
+use Symfony\Component\DependencyInjection\Attribute\Autoconfigure;
 
+#[Autoconfigure(
+    calls: [['setNext' => ['@'.LevelHandler::class]]]
+)]
 class CasinoHandler implements XpBonusHandlerInterface
 {
     private XpBonusHandlerInterface $next;
diff --git a/src/ChainHandler/LevelHandler.php b/src/ChainHandler/LevelHandler.php
index b1a2b6e..4958717 100644
--- a/src/ChainHandler/LevelHandler.php
+++ b/src/ChainHandler/LevelHandler.php
@@ -5,7 +5,11 @@ namespace App\ChainHandler;
 use App\Character\Character;
 use App\FightResult;
 use App\GameApplication;
+use Symfony\Component\DependencyInjection\Attribute\Autoconfigure;
 
+#[Autoconfigure(
+    calls: [['setNext' => ['@'.OnFireHandler::class]]]
+)]
 class LevelHandler implements XpBonusHandlerInterface
 {
     private XpBonusHandlerInterface $next;
diff --git a/src/Command/GameCommand.php b/src/Command/GameCommand.php
index 3430f1e..5e8ca5d 100644
--- a/src/Command/GameCommand.php
+++ b/src/Command/GameCommand.php
@@ -24,7 +24,6 @@ class GameCommand extends Command
 
     protected function execute(InputInterface $input, OutputInterface $output): int
     {
-        $this->game->initialize();
         $io = new SymfonyStyle($input, $output);
 
         // Static field so we can print messages from anywhere
diff --git a/src/GameApplication.php b/src/GameApplication.php
index 834d1bf..c752477 100644
--- a/src/GameApplication.php
+++ b/src/GameApplication.php
@@ -7,12 +7,11 @@ use App\ActionCommand\HealCommand;
 use App\ActionCommand\SurrenderCommand;
 use App\Builder\CharacterBuilder;
 use App\ChainHandler\CasinoHandler;
-use App\ChainHandler\LevelHandler;
-use App\ChainHandler\OnFireHandler;
 use App\ChainHandler\XpBonusHandlerInterface;
 use App\Character\Character;
 use App\Observer\GameObserverInterface;
 use App\Printer\MessagePrinter;
+use Symfony\Component\DependencyInjection\Attribute\Autowire;
 
 class GameApplication
 {
@@ -22,22 +21,12 @@ class GameApplication
 
     /** @var GameObserverInterface[] */
     private array $observers = [];
-    private XpBonusHandlerInterface $xpBonusHandler;
 
-    public function initialize(): void
-    {
-        $casinoHandler = new CasinoHandler();
-        $levelHandler = new LevelHandler();
-        $onFireHandler = new OnFireHandler();
-
-        $casinoHandler->setNext($levelHandler);
-        $levelHandler->setNext($onFireHandler);
-
-        $this->xpBonusHandler = $casinoHandler;
-    }
-
-    public function __construct(private readonly CharacterBuilder $characterBuilder)
-    {
+    public function __construct(
+        #[Autowire(service: CasinoHandler::class)]
+        private readonly XpBonusHandlerInterface $xpBonusHandler,
+        private readonly CharacterBuilder $characterBuilder
+    ) {
         $this->difficultyContext = new GameDifficultyContext();
     }
 
