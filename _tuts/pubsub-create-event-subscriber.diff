diff --git a/src/Command/GameCommand.php b/src/Command/GameCommand.php
index 8f7f941..fe9ccb0 100644
--- a/src/Command/GameCommand.php
+++ b/src/Command/GameCommand.php
@@ -3,7 +3,7 @@
 namespace App\Command;
 
 use App\Character\Character;
-use App\Event\FightStartingEvent;
+use App\Event\OutputFightStartingSubscriber;
 use App\FightResult;
 use App\GameApplication;
 use Symfony\Component\Console\Attribute\AsCommand;
@@ -27,9 +27,7 @@ class GameCommand extends Command
     protected function execute(InputInterface $input, OutputInterface $output): int
     {
         $io = new SymfonyStyle($input, $output);
-        $this->eventDispatcher->addListener(FightStartingEvent::class, function(FightStartingEvent $event) use ($io) {
-            $io->note('Fight is starting against ' . $event->ai->getNickname());
-        });
+        $this->eventDispatcher->addSubscriber(new OutputFightStartingSubscriber());
 
         $io->text('Welcome to the game where warriors fight against each other for honor and glory... and üçï!');
 
diff --git a/src/Event/OutputFightStartingSubscriber.php b/src/Event/OutputFightStartingSubscriber.php
new file mode 100644
index 0000000..2dc9db4
--- /dev/null
+++ b/src/Event/OutputFightStartingSubscriber.php
@@ -0,0 +1,25 @@
+<?php
+
+namespace App\Event;
+
+use Symfony\Component\Console\Input\ArrayInput;
+use Symfony\Component\Console\Output\ConsoleOutput;
+use Symfony\Component\Console\Style\SymfonyStyle;
+use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+
+class OutputFightStartingSubscriber implements EventSubscriberInterface
+{
+    public function onFightStart(FightStartingEvent $event)
+    {
+        $io = new SymfonyStyle(new ArrayInput([]), new ConsoleOutput());
+
+        $io->note('Fight is starting against ' . $event->ai->getNickname());
+    }
+
+    public static function getSubscribedEvents(): array
+    {
+        return [
+            FightStartingEvent::class => 'onFightStart',
+        ];
+    }
+}
