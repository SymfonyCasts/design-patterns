diff --git a/src/Command/GameCommand.php b/src/Command/GameCommand.php
index 5e8ca5d..3430f1e 100644
--- a/src/Command/GameCommand.php
+++ b/src/Command/GameCommand.php
@@ -24,6 +24,7 @@ class GameCommand extends Command
 
     protected function execute(InputInterface $input, OutputInterface $output): int
     {
+        $this->game->initialize();
         $io = new SymfonyStyle($input, $output);
 
         // Static field so we can print messages from anywhere
diff --git a/src/GameApplication.php b/src/GameApplication.php
index eab03d6..6fa3075 100644
--- a/src/GameApplication.php
+++ b/src/GameApplication.php
@@ -6,6 +6,10 @@ use App\ActionCommand\AttackCommand;
 use App\ActionCommand\HealCommand;
 use App\ActionCommand\SurrenderCommand;
 use App\Builder\CharacterBuilder;
+use App\ChainHandler\CasinoHandler;
+use App\ChainHandler\LevelHandler;
+use App\ChainHandler\OnFireHandler;
+use App\ChainHandler\XpBonusHandlerInterface;
 use App\Character\Character;
 use App\Observer\GameObserverInterface;
 use App\Printer\MessagePrinter;
@@ -18,6 +22,19 @@ class GameApplication
 
     /** @var GameObserverInterface[] */
     private array $observers = [];
+    private XpBonusHandlerInterface $xpBonusHandler;
+
+    public function initialize(): void
+    {
+        $casinoHandler = new CasinoHandler();
+        $levelHandler = new LevelHandler();
+        $onFireHandler = new OnFireHandler();
+
+        $casinoHandler->setNext($levelHandler);
+        $levelHandler->setNext($onFireHandler);
+
+        $this->xpBonusHandler = $casinoHandler;
+    }
 
     public function __construct(private readonly CharacterBuilder $characterBuilder)
     {
