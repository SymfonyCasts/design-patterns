diff --git a/src/Command/GameCommand.php b/src/Command/GameCommand.php
index ec5b01c..a87585b 100644
--- a/src/Command/GameCommand.php
+++ b/src/Command/GameCommand.php
@@ -5,9 +5,6 @@ namespace App\Command;
 use App\Character\Character;
 use App\FightResult;
 use App\GameApplication;
-use App\Observer\XpEarnedObserver;
-use App\Service\OutputtingXpCalculator;
-use App\Service\XpCalculator;
 use Symfony\Component\Console\Attribute\AsCommand;
 use Symfony\Component\Console\Command\Command;
 use Symfony\Component\Console\Input\InputInterface;
@@ -26,10 +23,6 @@ class GameCommand extends Command
 
     protected function execute(InputInterface $input, OutputInterface $output): int
     {
-        $xpCalculator = new XpCalculator();
-        $xpCalculator = new OutputtingXpCalculator($xpCalculator);
-        $this->game->subscribe(new XpEarnedObserver($xpCalculator));
-
         $io = new SymfonyStyle($input, $output);
 
         $io->text('Welcome to the game where warriors fight against each other for honor and glory... and 🍕!');
diff --git a/src/Kernel.php b/src/Kernel.php
index a83980d..8743831 100644
--- a/src/Kernel.php
+++ b/src/Kernel.php
@@ -24,7 +24,7 @@ class Kernel extends BaseKernel implements CompilerPassInterface
         $definition = $container->findDefinition(GameApplication::class);
         $taggedObservers = $container->findTaggedServiceIds('game.observer');
         foreach ($taggedObservers as $id => $tags) {
-//            $definition->addMethodCall('subscribe', [new Reference($id)]);
+            $definition->addMethodCall('subscribe', [new Reference($id)]);
         }
     }
 }
