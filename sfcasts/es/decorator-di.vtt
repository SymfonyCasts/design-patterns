WEBVTT

00:00:01.056 --> 00:00:07.486 align:middle
Acabamos de implementar el patrón decorador, en el
que básicamente envolvimos el original XpCalculator

00:00:07.566 --> 00:00:11.156 align:middle
en un cálido abrazo con
nuestro OutputtingXpCalculator.

00:00:11.616 --> 00:00:17.456 align:middle
Luego... lo introdujimos silenciosamente
en el sistema en lugar del original...

00:00:17.676 --> 00:00:23.916 align:middle
sin que nadie más -como XpEarnedObserver -
supiera o se preocupara de que lo habíamos hecho:

00:00:24.506 --> 00:00:29.866 align:middle
Pero para configurar la decoración, estoy
instanciando los objetos manualmente,

00:00:29.926 --> 00:00:33.206 align:middle
lo que no es muy realista
en una aplicación Symfony.

00:00:33.976 --> 00:00:41.136 align:middle
Lo que realmente queremos es que XpEarnedObserver se
autoconecte a XpCalculatorInterface de forma normal,

00:00:41.536 --> 00:00:45.746 align:middle
sin que tengamos que hacer nada
de esta instanciación manual.

00:00:46.166 --> 00:00:51.706 align:middle
Pero necesitamos que el contenedor le pase
nuestro servicio decorador OutputtingXpCalculator,

00:00:52.026 --> 00:00:54.676 align:middle
no el original XpCalculator.

00:00:55.406 --> 00:00:56.696 align:middle
¿Cómo podemos conseguirlo?

00:00:57.166 --> 00:01:02.906 align:middle
¿Cómo podemos decirle al contenedor que cada vez que
alguien haga una sugerencia de tipo XpCalculatorInterface,

00:01:03.306 --> 00:01:05.806 align:middle
debe pasarle nuestro servicio de decorador?

00:01:06.706 --> 00:01:10.726 align:middle
Para responder a esto, empecemos
por deshacer nuestro código manual:

00:01:11.946 --> 00:01:13.096 align:middle
Tanto en GameCommand...

00:01:13.456 --> 00:01:14.966 align:middle
como en Kernel...

00:01:15.376 --> 00:01:19.536 align:middle
vuelve a poner el código de fantasía que
adjunta el observador a GameApplication:

00:01:20.616 --> 00:01:27.326 align:middle
Si ahora probamos el comando Falla: No se puede
autoconectar el servicio XpEarnedObserver: el

00:01:27.586 --> 00:01:31.686 align:middle
argumento $xpCalculator hace referencia
a la interfaz XpCalculatorInterface

00:01:31.916 --> 00:01:33.946 align:middle
pero no existe tal servicio.

00:01:34.566 --> 00:01:38.786 align:middle
Quizá debas poner un alias de esta interfaz
a uno de estos servicios existentes:

00:01:39.156 --> 00:01:42.236 align:middle
OutputtingXpCalculator o XpCalculator.

00:01:42.776 --> 00:01:45.026 align:middle
Es un gran error...

00:01:45.226 --> 00:01:46.506 align:middle
y tiene sentido.

00:01:46.886 --> 00:01:52.756 align:middle
Dentro de nuestro observador, estamos haciendo referencia
a la interfaz en lugar de a una clase concreta.

00:01:53.246 --> 00:01:56.856 align:middle
Y, a menos que hagamos un poco
más de trabajo, Symfony no sabe

00:01:56.856 --> 00:02:00.796 align:middle
qué servicio de
XpCalculatorInterface debe pasarnos.

00:02:01.566 --> 00:02:03.126 align:middle
¿Cómo se lo decimos?

00:02:03.636 --> 00:02:06.296 align:middle
Creando un alias de servicio.

00:02:06.906 --> 00:02:13.196 align:middle
En config/services.yaml, digamos que
App\Service\XpCalculatorInterface

00:02:13.196 --> 00:02:18.426 align:middle
se convierte en
@App\Service\OutputtingXpCalculator:

00:02:19.476 --> 00:02:25.796 align:middle
Esto crea un servicio cuyo id es
App\Service\XpCalculatorInterface...

00:02:26.316 --> 00:02:33.056 align:middle
pero en realidad es sólo un "puntero", o
"alias", al servicio OutputtingXpCalculator.

00:02:33.656 --> 00:02:39.086 align:middle
Y recuerda que, durante el autocableado,
cuando Symfony ve un argumento indicado

00:02:39.086 --> 00:02:43.646 align:middle
con XpCalculatorInterface, para
averiguar qué servicio debe pasar,

00:02:44.056 --> 00:02:48.116 align:middle
simplemente busca en el contenedor un
servicio cuyo id coincida con el mismo,

00:02:48.536 --> 00:02:52.546 align:middle
es decir, App\Service\XpCalculatorInterface.

00:02:53.076 --> 00:02:55.076 align:middle
Y ahora, ¡encuentra uno!

00:02:55.856 --> 00:02:57.896 align:middle
Así que vamos a intentarlo de nuevo.

00:02:58.526 --> 00:03:01.566 align:middle
Y... sigue sin funcionar.

00:03:01.866 --> 00:03:03.116 align:middle
¡Estamos de enhorabuena!

00:03:03.896 --> 00:03:08.826 align:middle
Referencia circular detectada para el
servicio OutputtingXpCalculator, ruta:

00:03:08.956 --> 00:03:13.996 align:middle
OutputtingXpCalculator ->
OutputtingXpCalculator ¡Oh!

00:03:14.546 --> 00:03:19.816 align:middle
Symfony está autocableando
OutputtingXpCalculator en XpEarnedObserver...

00:03:20.156 --> 00:03:25.756 align:middle
pero también está autocableando
OutputtingXpCalculator en sí mismo:

00:03:26.016 --> 00:03:31.986 align:middle
¡Ups! Queremos que OutputtingXpCalculator
se utilice en todas las partes del sistema

00:03:31.986 --> 00:03:34.496 align:middle
que autocablean XpCalculatorInterface...

00:03:34.766 --> 00:03:36.866 align:middle
excepto en sí mismo.

00:03:37.416 --> 00:03:42.446 align:middle
Para conseguirlo, de nuevo en services.yaml,
podemos configurar manualmente el servicio.

00:03:43.136 --> 00:03:47.096 align:middle
Aquí abajo, añade
App\Service\OutputtingXpCalculator

00:03:48.586 --> 00:03:52.316 align:middle
con arguments, $innerCalculator
(ese es el nombre

00:03:52.316 --> 00:03:57.886 align:middle
de nuestro argumento) configurado
en @App\Service\XpCalculator:

00:03:58.806 --> 00:04:02.226 align:middle
Esto anulará el argumento
sólo para este caso.

00:04:02.816 --> 00:04:03.796 align:middle
Y ahora...

00:04:04.146 --> 00:04:07.546 align:middle
¿Funciona? Quiero decir, ¡claro que funciona!

00:04:08.296 --> 00:04:11.286 align:middle
Si jugamos unas cuantas rondas
y avanzamos rápidamente...

00:04:11.896 --> 00:04:15.506 align:middle
¡sí! ¡Ahí está el mensaje
de "has subido de nivel"!

00:04:15.796 --> 00:04:17.886 align:middle
¡Ha pasado por nuestro decorador!

00:04:18.586 --> 00:04:22.026 align:middle
Esta forma de cablear el decorador
no es nuestra solución definitiva.

00:04:22.676 --> 00:04:26.496 align:middle
Pero antes de llegar ahí,
tengo un reto aún mayor:

00:04:26.926 --> 00:04:32.716 align:middle
vamos a sustituir completamente un servicio central
de Symfony por el nuestro a través del decorador.

00:04:33.416 --> 00:04:34.326 align:middle
¡Eso a continuación!
